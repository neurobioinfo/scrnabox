############################################################################
# If you want to save an RNA expression matrix and metadata data frame set the following to "yes"
############################################################################
par_save_RNA= "yes"
par_save_metadata= "yes"


############################################################################
# If you already have a processed Seurat RDS object and did not perform Step 6 of scRNAbox use this parameter to add the path to the directory containing your Seurat object. 
# Uncomment the line to activate the parameter
############################################################################
#par_seurat_object= "/path/to/seurat.rds"


############################################################################
# General parameters for cluster annotation 
############################################################################
## The cluster resolution that you want to use. If you skipped integration, use par_level_cluster="RNA_snn_res.0.7", for example, if you want to proceed with a clustering resolution of 0.7
par_level_cluster= "integrated_snn_res.0.7"


############################################################################
# Tool 1: Marker GSEA
############################################################################
## Identify cluster specific markers
par_run_find_marker= "no"

## Run EnrichR GSEA on cluster-specific markers. This step should follow the identification of cluster-specific markers.  Additionally, this step can only be run if your HPC allows internet access.
par_run_enrichR= "no"

## Number of top markers based on avg_log2FC
par_top_sel= 5

## Character vector of EnrichR databases to search for enrichment
par_db= c("Descartes_Cell_Types_and_Tissue_2021","CellMarker_Augmented_2021","Azimuth_Cell_Types_2021")


######################################################################
# Tool 2: Visualize the expression of known marker genes
######################################################################
## Perform module score computation
par_run_module_score= "no"

## Visualize markers (dot plot, violin plot, feature plot)
par_run_visualize_markers= "yes"

## Define the path to a csv file containing the genes sets for module score
par_module_score= "/path/to/gene_sets.csv"

## List of markers that you want to visualize (dot plot, violin plot, feature plot)
par_select_features_list= c("gene1", "gene2", "gene3")

## If you want to define multiple lists of markers to visualize, you can do so with a csv file. The header should contain the list names and all features belonging to the same list should be in the same column. Uncomment the below parameter and enter the location of the csv file. This can be the same csv file used for module score. 
#par_select_features_csv= "/path/to/visualize_features.csv"


#####################################################################
# Method 3: Reference-based annotation parameters
######################################################################
## Seurat RDS object to use as the reference
par_reference= "/path/to/reference_seurat_object.rds"

## Define an arbitrary name for the reference object. This will be used to name the metadata slot.
par_reference_name= "reference"

## Name of a metadata column in the reference Seurat object that contains cell type annotations
par_level_celltype= "Cell_Type"

## Which dimensions to use to find transfer anchors between query and reference dataset
par_FindTransferAnchors_dim= 10

## This will increase your RAM usage so set this number mindfully
par_futureglobalsmaxSize= 60000 * 1024^2


#####################################################################
# Annotate parameters
# Annotations from each iteration will be added to the Step 7 Seurat object
######################################################################
## The clustering resolution to annotate
par_annotate_resolution= "integrated_snn_res.0.7"

## the name of the metadata slot under which the cluster labels will be stored. 
par_name_metadata= "clustering_1"

## A list of cluster labels. Make sure you have as many labels as clusters at the defined clustering resolution. Please do not use "_" when naming cell types. 
par_annotate_labels= c("Annot1", "Annot2", "Annot3")

