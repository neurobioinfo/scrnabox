library(EnhancedVolcano)
setwd('/Users/sam/Desktop/final_scrna_dge')
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
#ggsave(file = "EnhancedVolcano2.pdf")
dev.off()
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
#ggsave(file = "EnhancedVolcano2.pdf")
setwd('/Users/sam/Desktop/final_scrna_dge')
library(EnhancedVolcano)
setwd('/Users/sam/Desktop/final_scrna_dge')
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
#ggsave(file = "EnhancedVolcano2.pdf")
rm(list=ls())
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
#ggsave(file = "EnhancedVolcano2.pdf")
while (!is.null(dev.list()))  dev.off()
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
#ggsave(file = "EnhancedVolcano2.pdf")
dev.set(dev.next())
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
#ggsave(file = "EnhancedVolcano2.pdf")
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
#ggsave(file = "EnhancedVolcano2.pdf")
dev.set(dev.next())
library(scrnaboxR)
.libPaths()
knitr::opts_chunk$set(echo = TRUE)
library(Seurat)
library(clusterProfiler)
library(enrichplot)
library(org.Hs.eg.db)
library(tidyverse)
AnnotationDbi::keytypes(org.Hs.eg.db)
setwd('/Users/sam/Desktop/sa_int/protemics_data/')
file0='A53T_Dark_genome_6_weeks_June2022_Scaffold'
sel_down_genes_b <- read.csv(paste('/Users/sam/Desktop/sa_int/protemics_data/',file0,'.csv',sep=""))[,c(6,9,10)]
sel_down_genes_b[,2]<-as.numeric(sel_down_genes_b[,2])
sel0=(((sel_down_genes_b[,3]< -0.25) &  (sel_down_genes_b[,2]< 0.05)))
sel_down_genes<-sel_down_genes_b[sel0,1]
sel_down_genes<-sel_down_genes[!is.na(sel_down_genes)]
file0<- paste(file0,'down', sep='')
if (length(sel_down_genes)!=0) {
sel_vs_norm_go <- clusterProfiler::enrichGO(sel_down_genes,"org.Hs.eg.db",keyType = "SYMBOL",ont = "BP",minGSSize = 50)
write.csv(sel_vs_norm_go@result,file = paste(file0,'enrichGO','.csv',sep=''))
enr_go <- clusterProfiler::simplify(sel_vs_norm_go)
enrichplot::emapplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30, cex_label_category = 0.5)
}
if (length(sel_down_genes)!=0) {
gmt <- msigdbr::msigdbr(species = "human", category = "H")
sel_vs_norm_enrich <- clusterProfiler::enricher(gene = sel_down_genes,,pAdjustMethod = "BH",pvalueCutoff  = 0.05, qvalueCutoff  = 0.05, TERM2GENE = gmt[,c("gs_name", "gene_symbol")])
write.csv(sel_vs_norm_enrich@result,file = paste(file0,'enricher','.csv',sep=''))
dotplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30,font.size = 4,label_format = 20)
ggsave("A53T_w6_down.png")
}
cnetplot(enrichplot::pairwise_termsim(enr_go))
? cnetplot
? enrichplot::emapplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30, cex_label_category = 0.5)
? enrichplot::emapplot
enrichplot::emapplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30, cex_label_category = 0.5)
getwd()
setwd("Ëœ/Desktop)
setwd("~/Desktop")
ggsave("test.png")
enrichplot::emapplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30, cex_label_category = 0.5, font.size = 4)
cnetplot(enrichplot::pairwise_termsim(enr_go))
cnetplot(enrichplot::pairwise_termsim(enr_go),font.size = 4))
cnetplot(enrichplot::pairwise_termsim(enr_go,font.size = 4))
? cnetplot
? enrichplot::emapplot
knitr::opts_chunk$set(echo = TRUE)
library(Seurat)
library(clusterProfiler)
library(enrichplot)
library(org.Hs.eg.db)
library(tidyverse)
AnnotationDbi::keytypes(org.Hs.eg.db)
if (length(sel_down_genes)!=0) {
gmt <- msigdbr::msigdbr(species = "human", category = "H")
sel_vs_norm_enrich <- clusterProfiler::enricher(gene = sel_down_genes,,pAdjustMethod = "BH",pvalueCutoff  = 0.05, qvalueCutoff  = 0.05, TERM2GENE = gmt[,c("gs_name", "gene_symbol")])
write.csv(sel_vs_norm_enrich@result,file = paste(file0,'enricher','.csv',sep=''))
dotplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30,font.size = 3,label_format = 20)
ggsave("PRKN-KO_w2_up_dotplot.png")
}
if (length(sel_down_genes)!=0) {
gmt <- msigdbr::msigdbr(species = "human", category = "H")
sel_vs_norm_enrich <- clusterProfiler::enricher(gene = sel_down_genes,,pAdjustMethod = "BH",pvalueCutoff  = 0.05, qvalueCutoff  = 0.05, TERM2GENE = gmt[,c("gs_name", "gene_symbol")])
write.csv(sel_vs_norm_enrich@result,file = paste(file0,'enricher','.csv',sep=''))
dotplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30,font.size = 3,label_format = 20)
#ggsave("PRKN-KO_w2_up_dotplot.png")
}
if (length(sel_down_genes)!=0) {
gmt <- msigdbr::msigdbr(species = "human", category = "H")
sel_vs_norm_enrich <- clusterProfiler::enricher(gene = sel_down_genes,,pAdjustMethod = "BH",pvalueCutoff  = 0.05, qvalueCutoff  = 0.05, TERM2GENE = gmt[,c("gs_name", "gene_symbol")])
write.csv(sel_vs_norm_enrich@result,file = paste(file0,'enricher','.csv',sep=''))
dotplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30,font.size = 3,label_format = 20)
ggsave("PRKN-KO_w2_down_dotplot.png")
}
if (length(sel_down_genes)!=0) {
gmt <- msigdbr::msigdbr(species = "human", category = "H")
sel_vs_norm_enrich <- clusterProfiler::enricher(gene = sel_down_genes,,pAdjustMethod = "BH",pvalueCutoff  = 0.05, qvalueCutoff  = 0.05, TERM2GENE = gmt[,c("gs_name", "gene_symbol")])
write.csv(sel_vs_norm_enrich@result,file = paste(file0,'enricher','.csv',sep=''))
dotplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30,font.size = 3,label_format = 20)
#ggsave("PRKN-KO_w2_down_dotplot.png")
}
sel_down_genes_b <- read.csv(paste('/Users/sam/Desktop/sa_int/protemics_data/',file0,'.csv',sep=""))[,c(6,9,10)]
setwd('/Users/sam/Desktop/sa_int/protemics_data/')
file0='PRKN-KO_Dark_genome_2_weeks_June2022_Scaffold'
sel_down_genes_b <- read.csv(paste('/Users/sam/Desktop/sa_int/protemics_data/',file0,'.csv',sep=""))[,c(6,9,10)]
sel_down_genes_b[,2]<-as.numeric(sel_down_genes_b[,2])
sel0=(((sel_down_genes_b[,3]< -0.25) &  (sel_down_genes_b[,2]< 0.05)))
sel_down_genes<-sel_down_genes_b[sel0,1]
sel_down_genes<-sel_down_genes[!is.na(sel_down_genes)]
file0<- paste(file0,'down', sep='')
if (length(sel_down_genes)!=0) {
sel_vs_norm_go <- clusterProfiler::enrichGO(sel_down_genes,"org.Hs.eg.db",keyType = "SYMBOL",ont = "BP",minGSSize = 50)
write.csv(sel_vs_norm_go@result,file = paste(file0,'enrichGO','.csv',sep=''))
enr_go <- clusterProfiler::simplify(sel_vs_norm_go)
enrichplot::emapplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30, cex_label_category = 0.5)
ggsave("PRKN-KO_w2_down_enrichplot.png")
}
if (length(sel_down_genes)!=0) {
gmt <- msigdbr::msigdbr(species = "human", category = "H")
sel_vs_norm_enrich <- clusterProfiler::enricher(gene = sel_down_genes,,pAdjustMethod = "BH",pvalueCutoff  = 0.05, qvalueCutoff  = 0.05, TERM2GENE = gmt[,c("gs_name", "gene_symbol")])
write.csv(sel_vs_norm_enrich@result,file = paste(file0,'enricher','.csv',sep=''))
dotplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30,font.size = 3,label_format = 20)
#ggsave("PRKN-KO_w2_down_dotplot.png")
}
library(scrnaboxR)
library(scrnaboxR)
? dotplot
library(scrnaboxR)
PSUE='/Users/sam/Desktop/annot/annotation_d_b/seu_int_clu.rds'
PSUE='/Users/sam/Desktop/annot/annotation_d_b/seu_int_clu.rds'
aa<-read_csv(PSUE='/Users/sam/Desktop/annot/annotation_d_b/seu_int_clu.rds')
aa<-read_csv('/Users/sam/Desktop/annot/annotation_d_b/seu_int_clu.rds')
PSUE='/Users/sam/Desktop/annot/annotation_d_b/ctrl_temp_52.rds'
aa<-read_csv(PSUE)
ll
ls()
head(aa)
aa<-readRDS(PSUE)
head(aa)
level_cluster='predicted.id'
PWD='/Users/sam/Desktop/annot/annotation_d_b/'
PSUE='/Users/sam/Desktop/annot/annotation_d_b/ctrl_temp_52.rds'
top_sel=5
db <- c('Descartes_Cell_Types_and_Tissue_2021','CellMarker_Augmented_2021','Azimuth_Cell_Types_2021')
annotation(level_cluster,PWD,PSUE,top_sel,db)
annotation
level_cluster='predicted.id'
PWD='/Users/sam/Desktop/annot/annotation_d_b/'
library(Seurat)
library(Matrix)
library(dplyr)
library(ggplot2)
library("xlsx")
setwd(PWD)
PSUE='/Users/sam/Desktop/annot/annotation_d_b/ctrl_temp_52.rds'
ls()
rm(aa)
seu.q6 <- readRDS(PSUE)
# cd /Users/sam/Desktop/annot/annotation_c/
setwd(PWD)
# mkdir -p annot_enrich
dir.create("annot_enrich")
for (i in as.numeric(levels(unlist(unique(seu.q6[[level_cluster]]))))) {
dir.create(paste0(PWD,"/annot_enrich", "/clust",i))
}
i
# length(unique(seu.q6$integrated_snn_res.0.5))
Idents(seu.q6) <- level_cluster
ClusterMarkers <- FindAllMarkers(seu.q6, only.pos = TRUE)
ClusterMarkers$cluster
getwd()
write.csv(top5,"top_sel.csv")
top5 <- ClusterMarkers %>% group_by(cluster) %>% top_n(n=5, wt = avg_log2FC)
write.csv(top5,"top_sel.csv")
seu.q6[[level_cluster]]
levels(unlist(unique(seu.q6[[level_cluster]])))
levels(unlist(unique(seu.q6[[level_cluster]])))
# for(i in as.numeric(unique(seu.q6$level_cluster))){
levels(unlist(
unique(seu.q6[[level_cluster]])
))
# for(i in as.numeric(unique(seu.q6$level_cluster))){
levels(unlist(
unique(seu.q6[[level_cluster]])
))
# for(i in as.numeric(unique(seu.q6$level_cluster))){
levels(unlist(
(seu.q6[[level_cluster]])
))
seu.q6[[level_cluster]]
# for(i in as.numeric(unique(seu.q6$level_cluster))){
levels(unlist(
(seu.q6[[level_cluster]])
))
level(seu.q6[[level_cluster]])
levels(seu.q6[[level_cluster]])
unique(seu.q6[[level_cluster]])
unlist(unique(seu.q6[[level_cluster]]))
for (i in unlist(unique(seu.q6[[level_cluster]]))) {
N1.c0 <- ClusterMarkers %>% filter(cluster == i & avg_log2FC > 0)
genes <- N1.c0$gene
write.xlsx(genes, file="cluster_just_genes.xlsx",sheetName=paste0('cluster',i), row.names=FALSE,append=TRUE)
write.xlsx(N1.c0, file="cluster_whole.xlsx",sheetName=paste0('cluster',i), row.names=FALSE,append=TRUE)
}
DimPlot(seu.q6,group.by = level_cluster)
head(seu.q6)
DimPlot(seu.q6,group.by = Lables)
DimPlot(seu.q6,group.by = Lables)
DimPlot(seu.q6,group.by = seu.q6$Lables)
eu.q6$Lables
seu.q6$Lables
DimPlot(seu.q6,group.by = seu.q6$Lables)
Idents(seu.q6) <- Lables
Idents(seu.q6) <- Lables
Idents(seu.q6) <- 'Lables'
DimPlot(seu.q6,group.by = Lables)
DimPlot(seu.q6,group.by = Lables)
Idents(seu.q6) <- 'Lables'
DimPlot(seu.q6)
ggsave(file = "umap_geneotp.pdf")
getwd()
level_cluster='integrated_snn_res.0.7'
Idents(seu.q6) <- 'integrated_snn_res.0.7'
DimPlot(seu.q6)
DimPlot(seu.q6,group.by = Lables)
DimPlot(seu.q6,group.by = 'Lables')
head(seu.q6)
? DimPlot
DimPlot(seu.q6,split.by = 'Lables')
ggsave(file = "umap_splited.pdf")
level_cluster='integrated_snn_res.0.7'
unlist(unique(seu.q6[[level_cluster]]))
for (i in unlist(unique(seu.q6[[level_cluster]]))) {
print(i)
}
for (i in sor(unlist(unique(seu.q6[[level_cluster]])))) {
print(i)
}
for (i in sort(unlist(unique(seu.q6[[level_cluster]])))) {
print(i)
}
level_cluster='predicted.id'
unlist(unique(seu.q6[[level_cluster]]))
for (i in sort(unlist(unique(seu.q6[[level_cluster]])))) {
print(i)
}
sort(unlist(unique(seu.q6[[level_cluster]])))
sort(unlist(unique(seu.q6[[level_cluster]])))
seu.q6[[level_cluster]]
seu.q6[level_cluster]
? FindAllMarkers
? FindTransferAnchors
library(Seurat)
library(SeuratObject)
? TransferData
? eval
library("scPred")
library("Seurat")
library("magrittr")
reference<-readRDS("/Users/sam/Desktop/jerber52_reference.rds")
head(reference)
reference <- getFeatureSpace(reference, "celltype")
reference <- trainModel(reference)
library(scrnaboxR)
aa=readRDS('/Users/sam/Desktop/annot/2weeks/objs/seu_int_clu.rds')
head(aa)
unique(aa$integrated_snn_res.0.9)
unique(aa$integrated_snn_res.0.7)
unique(aa$integrated_snn_res.0.6)
unique(aa$integrated_snn_res.0.5)
unique(aa$integrated_snn_res.0.2)
unique(aa$integrated_snn_res.0.1)
PWD='/Users/sam/Desktop/annot/2weeks'
PSUE='/Users/sam/Desktop/annot/2weeks/objs/seu_int_clu.rds'
top_sel=5
db <- c('Descartes_Cell_Types_and_Tissue_2021','CellMarker_Augmented_2021','Azimuth_Cell_Types_2021')
annotation(level_cluster,PWD,PSUE,top_sel,db)
level_cluster='integrated_snn_res.0.7'
annotation(level_cluster,PWD,PSUE,top_sel,db)
level_cluster='integrated_snn_res.0.7'
PWD='/Users/sam/Desktop/annot/2weeks'
PSUE='/Users/sam/Desktop/annot/2weeks/objs/seu_int_clu.rds'
top_sel=5
library(scrnaboxR)
seu.q6 <- readRDS(PSUE)
DimPlot(seu.q6,group.by = 'integrated_snn_res.0.7')
DimPlot(seu.q6,group.by = 'integrated_snn_res.0.7', label = TRUE)
setwd()
getwd()
setwd("~/Desktop")
ggsave(file = "umap_2_week.pdf")
level_cluster='integrated_snn_res.0.4'
PWD='/Users/sam/Desktop/annot/2weeks'
PSUE='/Users/sam/Desktop/annot/2weeks/objs/seu_int_clu.rds'
top_sel=5
db <- c('Descartes_Cell_Types_and_Tissue_2021','CellMarker_Augmented_2021','Azimuth_Cell_Types_2021')
annotation(level_cluster,PWD,PSUE,top_sel,db)
seu.q6 <- readRDS(PSUE)
getwd()
setwd('/Users/sam/Desktop/annot/2weeks')
DimPlot(seu.q6,group.by = 'integrated_snn_res.0.4', label = TRUE)
ggsave(file = "umap_2_week.pdf")
library(scrnaboxR)
library(scrnaboxR)
X<-sample(c('a1', 'a2'), 1000, replace=TRUE)
Y<-sample(c('b1', 'b2', 'b3'), 1000, replace=TRUE)
Compute_index(X,Y)
Compute_index
detach("package:scrnaboxR", unload = TRUE)
library(scrnaboxR)
Compute_index
library(scrnaboxR)
Compute_index(X,Y)
library(scrnaboxR)
X<-sample(c('a1', 'a2'), 1000, replace=TRUE)
Y<-sample(c('b1', 'b2', 'b3'), 1000, replace=TRUE)
Compute_index(X,Y)
library(scrnaboxR)
compute_index(X,Y)
library(scrnaboxR)
csv_to_xlsx
? ::
? FindAllMarkers
?  setEnrichrSite
? Combined.Score
library(scrnaboxR)
library(scrnaboxR)
csv_to_xlsx
files_path<-"/Users/sam/Desktop/approach2/all"
files <-list.files(files_path,pattern="*.csv")
files
xlsx::write.xlsx(data.frame(files), file="final.xlsx",sheetName='list', row.names=TRUE,append=TRUE)
install.packages("openxlsx2")
install.packages("openxlsx")
? openxlsx::write.xlsx
files_path<-"/Users/sam/Desktop/approach2/all"
dest_path<-"/Users/sam/Desktop"
csv_to_xlsx(files_path,dest_path,name='sheet')
library(scrnaboxR)
files_path<-"/Users/sam/Desktop/approach2/all"
dest_path<-"/Users/sam/Desktop"
csv_to_xlsx(files_path,dest_path,name='sheet')
files <-list.files(files_path,pattern="*.csv")
xlsx::write.xlsx(data.frame(files), file="final.xlsx",sheetName='list', row.names=TRUE,append=TRUE)
xlsx::write.xlsx(data.frame(files), file="final2.xlsx",sheetName='list', row.names=TRUE,append=TRUE)
getwd()
setwd('/Users/sam/Desktop')
csv_to_xlsx(files_path,dest_path,name='sheet')
files <-list.files(files_path,pattern="*.csv")
xlsx::write.xlsx(data.frame(files), file="final2.xlsx",sheetName='list', row.names=TRUE,append=TRUE)
files
xlsx::write.xlsx(files, file="final2.xlsx",sheetName='list', row.names=TRUE,append=TRUE)
xlsx::write.xlsx(files, file=("final.xlsx"),sheetName=paste0('list'), row.names=TRUE,append=TRUE)
files_path<-"/Users/sam/Desktop/approach2/all"
dest_path<-"/Users/sam/Desktop"
files <-list.files(files_path,pattern="*.csv")
xlsx::write.xlsx(files, file=("final.xlsx"),sheetName=paste0('list'), row.names=TRUE,append=TRUE)
getwd()
/Users/sam/Desktop
setw('/Users/sam/Desktop')
setwd('/Users/sam/Desktop')
xlsx::write.xlsx(files, file=("final.xlsx"),sheetName=paste0('list'), row.names=TRUE,append=TRUE)
i<-1
xob<-read.csv(paste(files_path,files[i],sep="/"))
xob
xlsx::write.xlsx(xob, file=paste("final.xlsx"),sheetName=paste0('sheet',i), row.names=TRUE,append=TRUE)
i<-2
xlsx::write.xlsx(xob, file=paste("final.xlsx"),sheetName=paste0('sheet',i), row.names=TRUE,append=TRUE)
getwd()
files <-list.files(files_path,pattern="*.csv")
xlsx::write.xlsx(files, file=("final.xlsx"),sheetName=paste0('list'), row.names=TRUE,append=TRUE)
lf0<-length(files)
for( i in 1:lf0){
xob<-read.csv(paste(files_path,files[i],sep="/"))
write.xlsx(xob, file=paste("final.xlsx"),sheetName=paste0('sheet',i), row.names=TRUE,append=TRUE)
}
files <-list.files(files_path,pattern="*.csv")
xlsx::write.xlsx(files, file=("final.xlsx"),sheetName=paste0('list'), row.names=TRUE,append=TRUE)
files <-list.files(files_path,pattern="*.csv")
xlsx::write.xlsx(files, file=("final.xlsx"),sheetName=paste0('list'), row.names=TRUE,append=TRUE)
lf0<-length(files)
for( i in 1:lf0){
xob<-read.csv(paste(files_path,files[i],sep="/"))
xlsx::write.xlsx(xob, file=paste("final.xlsx"),sheetName=paste0('sheet',i), row.names=TRUE,append=TRUE)
}
i
xob<-read.csv(paste(files_path,files[i],sep="/"))
xob
files_path<-"/Users/sam/Desktop/approach2/sig"
dest_path<-"/Users/sam/Desktop"
csv_to_xlsx(files_path,dest_path,name='sheet')
files <-list.files(files_path,pattern="*.csv")
xlsx::write.xlsx(files, file=("final_sig.xlsx"),sheetName=paste0('list'), row.names=TRUE,append=TRUE)
lf0<-length(files)
for( i in 1:lf0){
xob<-read.csv(paste(files_path,files[i],sep="/"))
xlsx::write.xlsx(xob, file=paste("final.xlsx"),sheetName=paste0('sheet',i), row.names=TRUE,append=TRUE)
}
i
files_path,files[i]
files
install.packages(c("BH", "BiasedUrn", "bookdown", "broom", "clue", "ClusterR", "colorspace", "dplyr", "DT", "e1071", "emmeans", "evaluate", "fansi", "ff", "fontawesome", "forcats", "formatR", "fs", "future", "gargle", "ggrepel", "gmp", "hdf5r", "kernlab", "knitr", "lubridate", "markdown", "openxlsx", "openxlsx2", "pbkrtest", "pryr", "Rcpp", "RcppArmadillo", "RcppTOML", "RCurl", "reticulate", "rgl", "rmarkdown", "rstatix", "sass", "sourcetools", "sp", "spatstat.explore", "spatstat.geom", "spatstat.random", "terra", "tidygraph", "tidyr", "tinytex", "tree", "tseries", "utf8", "vctrs", "vroom", "xfun", "yaml"))
install.packages(c("BH", "BiasedUrn", "bookdown", "broom", "clue", "ClusterR", "colorspace", "dplyr", "DT", "e1071", "emmeans", "evaluate", "fansi", "ff", "fontawesome", "forcats", "formatR", "fs", "future", "gargle", "ggrepel", "gmp", "hdf5r", "kernlab", "knitr", "lubridate", "markdown", "openxlsx", "openxlsx2", "pbkrtest", "pryr", "Rcpp", "RcppArmadillo", "RcppTOML", "RCurl", "reticulate", "rgl", "rmarkdown", "rstatix", "sass", "sourcetools", "sp", "spatstat.explore", "spatstat.geom", "spatstat.random", "terra", "tidygraph", "tidyr", "tinytex", "tree", "tseries", "utf8", "vctrs", "vroom", "xfun", "yaml"))
install.packages("BH")
install.packages(c("BiasedUrn", "bookdown", "broom", "clue", "ClusterR", "colorspace"))
install.packages(c("tidyr", "tinytex", "tree", "tseries", "utf8", "vctrs", "vroom", "xfun", "yaml"))
install.packages("dplyr")
install.packages(c("DT", "e1071", "forcats"))
install.packages(c("class", "codetools", "MASS", "nlme", "spatial"), lib="/Library/Frameworks/R.framework/Versions/4.2/Resources/library")
install.packages(c("terra", "tidygraph", "tidyr", "tinytex", "tree", "tseries", "utf8", "vroom", "xfun", "yaml"))
install.packages(c("emmeans", "evaluate", "fansi"))
install.packages(c("ff", "fontawesome", "formatR", "fs", "future", "gargle"))
install.packages(c("gmp", "hdf5r", "kernlab", "knitr", "lubridate", "markdown", "openxlsx", "openxlsx2", "pbkrtest", "pryr"))
install.packages(c("sourcetools", "sp", "spatstat.explore", "spatstat.geom", "spatstat.random"))
install.packages(c("RCurl", "reticulate", "rgl", "rmarkdown", "rstatix", "sass"))
install.packages(c("ggrepel", "Rcpp", "RcppArmadillo", "RcppTOML"))
read.csv2('/Users/sam/Desktop/Book1.csv')
aa=read.csv2('/Users/sam/Desktop/Book1.csv')
dim(aa)
aa=read.csv2('/Users/sam/Desktop/Book1.csv')
dim(aa)
aa
library(tidyverse)
stri_split(aa,"_")
stringer::stri_split(aa,"_")
stringi::stri_split(aa,"_")
str_split
str_split(aa,"_")
ab<-str_split(aa,"_")
ab
ab[,1]
aa
ab<-str_split(aa[,1],"_")
ab
aa[,1]
aa[,1]
aa[1,1]
aa[2,1]
ab<-str_split(aa[1,1],"_")
ab
ab[1]
ab[1][1]
ab[[1][1]
ab[[1]][1]
dim(aa)
aa[1,1]
aa[1,2]
aa[10,1]
ac<-NULL
ac<-NULL
for (i in 1:3065){
ab<-str_split(aa[i,1],"_")
ac[i]<-ab[[1]][1]
}
ac
table(ac)
unique(ac)
install.packages(c("ape", "aplot", "BiocManager", "blob", "bookdown", "broom", "cachem", "classInt", "commonmark", "data.table", "dbplyr", "dtplyr", "emmeans", "fastmap", "filehash", "forecast", "fs", "future", "ggplot2", "ggpubr", "ggsci", "gh", "gmp", "googleVis", "gtable", "haven", "htmlwidgets", "httpuv", "httr", "igraph", "ipred", "lava", "lme4", "lubridate", "magick", "multcomp", "openssl", "openxlsx2", "pkgKitten", "raster", "RcppArmadillo", "readr", "readxl", "recipes", "rgeos", "RhpcBLASctl", "rlang", "RSQLite", "scatterplot3d", "sf", "spatstat.data", "spatstat.explore", "spatstat.geom", "spatstat.random", "spatstat.sparse", "spatstat.utils", "spData", "spdep", "terra", "testthat", "tibble", "tidyverse", "tinytest", "vctrs", "VGAM", "wk", "XML", "xts"))
install.packages("ape")
install.packages("aplot")
install.packages(c("BiocManager", "blob", "bookdown"))
install.packages(c("foreign", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial", "survival"), lib="/Library/Frameworks/R.framework/Versions/4.2/Resources/library")
install.packages(c("wk", "XML", "xts"))
install.packages(c("cluster", "codetools"), lib="/Library/Frameworks/R.framework/Versions/4.2/Resources/library")
install.packages("xts")
install.packages(c("boot", "class"), lib="/Library/Frameworks/R.framework/Versions/4.2/Resources/library")
install.packages(c("VGAM", "wk", "XML"))
install.packages(c("testthat", "tibble", "tidyverse", "tinytest", "vctrs"))
install.packages(c("spData", "spdep", "terra"))
install.packages(c("spatstat.explore", "spatstat.geom", "spatstat.random", "spatstat.sparse", "spatstat.utils"))
install.packages(c("scatterplot3d", "sf", "spatstat.data"))
shiny::runApp('~/Downloads/MTSvieweR/MTSvieweR')
shiny::runApp('~/Downloads/MTSvieweR/MTSvieweR')
shiny::runApp('~/Downloads/MTSvieweR/MTSvieweR')
install.packages("shiny")
shiny::runApp('~/Downloads/MTSvieweR/MTSvieweR')
install.packages("broom")
install.packages("dbplyr")
install.packages("fastmap")
shiny::runApp('~/Downloads/MTSvieweR/MTSvieweR')
library(fastmap)
library(fastmap)
remove.packages("fastmap")
install.packages("fastmap")
library(fastmap)
library(fastmap)
detach("package:fastmap", unload = TRUE)
library(fastmap)
remove.packages("fastmap")
.libPaths()
("fastmap")
library("fastmap")
library(ggplot2)
library(ggplot2)
library(scrnaboxR)
library(scrnaboxR)
library(scrnaboxR)
detach("package:scrnaboxR", unload = TRUE)
library(scrnaboxR)
library(scrnaboxR)
library(scrnaboxR)
library(scrnaboxR)
